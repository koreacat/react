{"version":3,"sources":["common/DateFormat.ts","component/clock/type.ts","component/clock/Clock.tsx","component/todoList/TodoList.tsx","component/appMenu/AppMenu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DateFormat","d","format","h","KL","KS","EL","ES","zf","num","len","s","i","toString","length","replace","__","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getDay","clockList","arr","Array","from","fill","a","x","y","z","hms","j","KoreanClock","date","className","parseInt","DigitalClock","AnalogClock","h_s","m_s","minutesDeg","secondsDeg","hoursStyle","transform","minutesStyle","secondsStyle","style","DigilogClocks","digilogClockList","ns","h1","Math","floor","h2","m1","m2","s1","s2","map","digilogClocks","index","key","clock","Clock","useState","Date","setDate","useEffect","interval","setInterval","clearInterval","TodoList","AppIcon","title","onClick","AppMenu","setAppState","App","appState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8RAgCeA,G,kBAhCK,SAACC,EAASC,GAC1B,IAIIC,EAJEC,EAAK,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBAChDC,EAAK,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACpCC,EAAK,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACxEC,EAAK,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAGlDC,EAAM,SAACC,EAAaC,GAEpB,IADA,IAAIC,EAAI,GAAIC,EAAI,EACTA,IAAMF,EAAMD,EAAII,WAAWC,QAAQH,GAAK,IAC/C,OAAOA,EAAIF,EAAII,YAGnB,OAAOX,EAAOa,QAAQ,kDAAmD,SAACC,GACtE,OAAQA,GACJ,IAAK,OAAQ,OAAOf,EAAEgB,cACtB,IAAK,KAAM,OAAOT,EAAIP,EAAEgB,cAAgB,IAAO,GAC/C,IAAK,KAAM,OAAOT,EAAIP,EAAEiB,WAAa,EAAG,GACxC,IAAK,KAAM,OAAOV,EAAGP,EAAEkB,UAAU,GACjC,IAAK,KAAM,OAAOX,EAAGP,EAAEmB,WAAW,GAClC,IAAK,KAAM,OAAOZ,GAAKL,EAAIF,EAAEmB,WAAa,IAAMjB,EAAI,GAAK,GACzD,IAAK,KAAM,OAAOK,EAAGP,EAAEoB,aAAa,GACpC,IAAK,KAAM,OAAOb,EAAGP,EAAEqB,aAAa,GACpC,IAAK,KAAM,OAAOlB,EAAGH,EAAEsB,UACvB,IAAK,KAAM,OAAOlB,EAAGJ,EAAEsB,UACvB,IAAK,KAAM,OAAOjB,EAAGL,EAAEsB,UACvB,IAAK,KAAM,OAAOhB,EAAGN,EAAEsB,UACvB,IAAK,MAAO,OAAOtB,EAAEmB,WAAa,GAAK,KAAO,KAC9C,QAAS,OAAOJ,QCxBfQ,EAAa,WAOtB,IANA,IAAIC,EAAMC,MAAMC,KAAKD,MAAM,KAAK,kBAAMA,MAAM,IAAIE,KAAK,SACjDC,EAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9BC,EAAI,EACJC,EAAI,EACJC,EAAI,EACJC,EAAM,IACFrB,EAAE,EAAGA,EAAE,GAAIA,IAAI,CACnB,IAAI,IAAIsB,EAAE,EAAGA,EAAE,GAAIA,IACT,GAAHA,EACCD,EAAM,IACE,IAAHC,EACLD,EAAM,IACE,IAAHC,IACLD,EAAM,KAGPrB,EAAE,GAAKA,EAAE,GAAS,IAAJsB,GAAa,KAAJA,GAAe,IAAJtB,IAAc,KAAJsB,GAAc,KAAJA,IAAiB,IAAJtB,IAAc,KAAJsB,GAAc,KAAJA,IAAiB,IAAJtB,IAAc,KAAJsB,GAAc,KAAJA,IAAiB,IAAJtB,IAAc,KAAJsB,GAAc,KAAJA,GACxJT,EAAIb,GAAGsB,GAAK,KAEH,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,EAC7ET,EAAIb,GAAGsB,GAAK,KAEH,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,EAC7ET,EAAIb,GAAGsB,GAAK,KAEH,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,EAC7ET,EAAIb,GAAGsB,GAAK,KAEH,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,GAAgB,IAAJtB,GAAa,KAAJsB,EAC7ET,EAAIb,GAAGsB,GAAK,MAGZT,EAAIb,GAAGsB,GAAKD,EAAMD,EAAI,IAAMH,EAAEC,GAAKD,EAAEE,KAClCA,EAAE,IAEDA,EAAE,IADFC,EAEK,IACDA,EAAI,KAKjBpB,EAAE,KACDkB,EACE,IAAMA,EAAE,GAGlB,OAAOL,GC9CLU,EAAe,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KACnB,OACI,yBAAKC,UAAW,eACZ,yBAAKA,UAAW,mBACZ,+BACI,+BACA,4BACI,wBAAIA,UAAWC,SAAStC,EAAWoC,EAAM,QAAU,GAAKE,SAAStC,EAAWoC,EAAM,OAAS,GAAK,KAAO,IAAvG,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAA9D,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAA9D,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAA9D,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAA9D,WAEJ,4BACI,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,QAAmD,GAApCE,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAAvG,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,QAAmD,GAApCE,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAAvG,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAA9D,UACA,wBAAIC,UAAWC,SAAStC,EAAWoC,EAAM,QAAU,GAAK,KAAO,IAA/D,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,QAAmD,IAApCE,SAAStC,EAAWoC,EAAM,OAAe,KAAO,IAAxG,WAEJ,4BACI,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAA9D,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAA9D,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,OAAc,KAAO,IAA9D,UACA,wBAAIC,UAA+C,GAApCC,SAAStC,EAAWoC,EAAM,QAAmD,IAApCE,SAAStC,EAAWoC,EAAM,OAAe,KAAO,IAAxG,UACA,wBAAIC,UAAW,MAAf,WAEJ,4BACI,wBAAIA,UAAWC,SAAStC,EAAWoC,EAAM,QAAU,IAAME,SAAStC,EAAWoC,EAAM,OAAS,EAAI,KAAO,IAAvG,UACA,wBAAIC,UAA+C,IAApCC,SAAStC,EAAWoC,EAAM,OAAe,KAAO,IAA/D,UACA,wBAAIC,UAAWC,SAAStC,EAAWoC,EAAM,QAAU,IAAME,SAAStC,EAAWoC,EAAM,OAAS,GAAK,KAAO,IAAxG,UACA,wBAAIC,UAAWC,SAAStC,EAAWoC,EAAM,QAAU,IAAME,SAAStC,EAAWoC,EAAM,OAAS,GAAK,KAAO,IAAxG,UACA,wBAAIC,UAAWC,SAAStC,EAAWoC,EAAM,QAAU,IAAME,SAAStC,EAAWoC,EAAM,OAAS,GAAK,KAAO,IAAxG,WAEJ,4BACI,wBAAIC,UAAWC,SAAStC,EAAWoC,EAAM,QAAU,IAAME,SAAStC,EAAWoC,EAAM,OAAS,GAAK,KAAO,IAAxG,UACA,wBAAIC,UAAWC,SAAStC,EAAWoC,EAAM,QAAU,IAA0C,IAApCE,SAAStC,EAAWoC,EAAM,OAAe,KAAO,IAAzG,UACA,wBAAIC,UAAWC,SAAStC,EAAWoC,EAAM,QAAU,GAAK,KAAO,IAA/D,UACA,wBAAIC,UAAWC,SAAStC,EAAWoC,EAAM,OAAS,IAAM,EAAI,KAAO,IAAnE,UACA,wBAAIC,UAAWC,SAAStC,EAAWoC,EAAM,OAAS,EAAI,KAAO,IAA7D,gBASlBG,EAAe,SAAC,GAAwB,IAAvBH,EAAsB,EAAtBA,KACnB,OACI,yBAAKC,UAAW,gBACZ,2BACI,8BAAOrC,EAAWoC,EAAM,iBACxB,8BAAOpC,EAAWoC,EAAM,qBAMlCI,EAAc,SAAC,GAAwB,IAAvBJ,EAAsB,EAAtBA,KACZK,EAAwB,GAAlBL,EAAKhB,WAAkB,GAC7BsB,EAA0B,GAApBN,EAAKf,aACXV,EAAIyB,EAAKd,aAETqB,EAA0B,IAAXD,EAAM/B,GAAY,IACjCiC,EAAiB,EAAJjC,EAEbkC,EAAa,CACfC,UAAU,UAAD,OALuB,WAAjBL,EAAMC,EAAM/B,GAAmB,IAKrC,SAGPoC,EAAe,CACjBD,UAAU,UAAD,OAAYH,EAAZ,SAGPK,EAAe,CACjBF,UAAU,UAAD,OAAYF,EAAZ,SAGb,OACI,yBAAKP,UAAW,eACZ,yBAAKA,UAAW,OAAQY,MAAOJ,IAC/B,yBAAKR,UAAW,SAAUY,MAAOF,IACjC,yBAAKV,UAAW,SAAUY,MAAOD,IACjC,yBAAKX,UAAW,UAKtBa,EAAiB,SAAC,GAAmC,IAAlCd,EAAiC,EAAjCA,KAAMe,EAA2B,EAA3BA,iBACrBC,EAAK,CAAC,OAAQ,MAAO,MAAO,QAAS,OAAQ,OAAQ,MAAO,QAAS,QAAS,QAC9EC,EAAKC,KAAKC,MAAMnB,EAAKhB,WAAa,IAClCoC,EAAKpB,EAAKhB,WAAa,GACvBqC,EAAKH,KAAKC,MAAMnB,EAAKf,aAAe,IACpCqC,EAAKtB,EAAKf,aAAe,GACzBsC,EAAKL,KAAKC,MAAMnB,EAAKd,aAAe,IACpCsC,EAAKxB,EAAKd,aAAe,GAE/B,OACI,yBAAKe,UAAW,iBACZ,yBAAKA,UAAW,oBACZ,+BACI,+BAEIc,EAAiBU,KAAI,SAACC,EAAoBC,GAArB,OACjB,wBAAIC,IAAKD,GAEDD,EAAcD,KAAI,SAACI,EAAeF,GAAhB,OACd,wBAAIC,IAAKD,GACL,yBAAK1B,UACD,gBACA4B,EAAMlD,QAAQ,yBAA0B,SAACC,GACrC,OAAQA,GACJ,IAAK,KACD,OAAOoC,EAAGC,GACd,IAAK,KACD,OAAOD,EAAGI,GACd,IAAK,KACD,OAAOJ,EAAGK,GACd,IAAK,KACD,OAAOL,EAAGM,GACd,IAAK,KACD,OAAON,EAAGO,GACd,IAAK,KACD,OAAOP,EAAGQ,GACd,QACI,OAAO5C,OAInB,yBAAKqB,UAAW,MAChB,yBAAKA,UAAW,oBAuCjD6B,EAzBD,WAAO,IAAD,EACQC,mBAAS,IAAIC,MADrB,mBACThC,EADS,KACHiC,EADG,OAEgCF,mBAAS3C,GAFzC,mBAET2B,EAFS,UAehB,OAXAmB,qBAAU,WACN,IAAMC,EAAWC,aACb,kBAAMH,EAAQ,IAAID,QAClB,KAEJ,OAAO,WACHK,cAAcF,MAEnB,IAIC,yBAAKlC,UAAW,SACZ,kBAAC,EAAD,CAAaD,KAAMA,IACnB,kBAAC,EAAD,CAAcA,KAAMA,IACpB,kBAAC,EAAD,CAAeA,KAAMA,EAAMe,iBAAkBA,IAC7C,kBAAC,EAAD,CAAaf,KAAMA,MChKhBsC,G,MATE,WAEb,OACI,yBAAKrC,UAAW,YAAhB,cCAFsC,EAAU,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAErB,OACI,yBAAKxC,UAAW,UAAWwC,QAASA,GAChC,0BAAMxC,UAAW,eAAgBuC,KAsB9BE,EAjBC,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,YASd,OACI,yBAAK1C,UAAW,WACZ,kBAAC,EAAD,CAASuC,MAAO,QAASC,QAVd,WACfE,EAAY,kBAAC,EAAD,UAUR,kBAAC,EAAD,CAASH,MAAO,WAAYC,QAPd,WAClBE,EAAY,kBAAC,EAAD,YCLLC,MAXf,WAAgB,IAAD,EACmBb,mBAAS,sCAD5B,mBACNc,EADM,KACIF,EADJ,KAGb,OACE,yBAAK1C,UAAU,OACZ4C,EACD,kBAAC,EAAD,CAASF,YAAaA,MCERG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6cc826d2.chunk.js","sourcesContent":["const DateFormat = ((d: Date, format: string) => {\r\n    const KL = [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"];\r\n    const KS = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n    const EL = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const ES = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    let h;\r\n\r\n    let zf = ((num: number, len: number) => {\r\n        let s = '', i = 0;\r\n        while (i++ < len - num.toString().length) s += '0';\r\n        return s + num.toString();\r\n    });\r\n\r\n    return format.replace(/(yyyy|yy|MM|dd|KS|KL|ES|EL|HH|hh|mm|ss|a\\/p)/gi, ((__: any) => {\r\n        switch (__) {\r\n            case \"yyyy\": return d.getFullYear();\r\n            case \"yy\": return zf((d.getFullYear() % 1000), 2);\r\n            case \"MM\": return zf((d.getMonth() + 1),2);\r\n            case \"dd\": return zf(d.getDate(),2);\r\n            case \"HH\": return zf(d.getHours(),2);\r\n            case \"hh\": return zf(((h = d.getHours() % 12) ? h : 12), 2);\r\n            case \"mm\": return zf(d.getMinutes(),2);\r\n            case \"ss\": return zf(d.getSeconds(),2);\r\n            case \"KL\": return KL[d.getDay()];\r\n            case \"KS\": return KS[d.getDay()];\r\n            case \"EL\": return EL[d.getDay()];\r\n            case \"ES\": return ES[d.getDay()];\r\n            case \"a/p\": return d.getHours() < 12 ? \"AM\" : \"PM\";\r\n            default: return __;\r\n        }\r\n    }));\r\n});\r\nexport default DateFormat;","export interface clockProps {\r\n    date: Date;\r\n}\r\n\r\nexport const clockList = (() => {\r\n    let arr = Array.from(Array(12), () => Array(36).fill(null));\r\n    let a = ['a', 'b', 'c', 'd', 'e', 'f'];\r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 1;\r\n    let hms = 'h';\r\n    for(let i=0; i<12; i++){\r\n        for(let j=0; j<36; j++){\r\n            if(j==0){\r\n                hms = 'h';\r\n            }else if(j==12) {\r\n                hms = 'm';\r\n            }else if(j==24){\r\n                hms = 's';\r\n            }\r\n\r\n            if(i<3 || i>8 || j===0 || j===35 || (i===3 && (j===11 || j===12)) || (i===3 && (j===23 || j===24)) || (i===8 && (j===11 || j===12)) || (i===8 && (j===23 || j===24))){\r\n                arr[i][j] = 'xx';\r\n            }\r\n            else if((i===4 && j===11) || (i===6 && j===11) || (i===4 && j===23) || (i===6 && j===23)){\r\n                arr[i][j] = 'aa'\r\n            }\r\n            else if((i===4 && j===12) || (i===6 && j===12) || (i===4 && j===24) || (i===6 && j===24)){\r\n                arr[i][j] = 'ab'\r\n            }\r\n            else if((i===5 && j===11) || (i===7 && j===11) || (i===5 && j===23) || (i===7 && j===23)){\r\n                arr[i][j] = 'ba'\r\n            }\r\n            else if((i===5 && j===12) || (i===7 && j===12) || (i===5 && j===24) || (i===7 && j===24)){\r\n                arr[i][j] = 'bb'\r\n            }\r\n            else {\r\n                arr[i][j] = hms + z + ' ' + a[x] + a[y++];\r\n                if(y>4){\r\n                    z++;\r\n                    y=0;\r\n                    if(z>2){\r\n                        z = 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(i>2){\r\n            x++;\r\n            x>5 && (x=0);\r\n        }\r\n    }\r\n    return arr;\r\n});","import React, {useState, useEffect, useCallback} from 'react';\r\nimport './Clock.scss';\r\nimport DateFormat from '../../common/DateFormat';\r\nimport {clockProps, clockList} from './type';\r\n\r\n\r\nconst KoreanClock = (({date}: clockProps) => {\r\n    return (\r\n        <div className={'koreanClock'}>\r\n            <div className={'koreanClockWrap'}>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className={parseInt(DateFormat(date, 'HH')) >= 9 && parseInt(DateFormat(date, 'HH')) < 21 ? 'on' : ''}>낮</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 5 ? 'on' : ''}>다</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 7 ? 'on' : ''}>일</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 3 ? 'on' : ''}>세</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 4 ? 'on' : ''}>네</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 6 || parseInt(DateFormat(date, 'hh')) == 8 ? 'on' : ''}>여</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 5 || parseInt(DateFormat(date, 'hh')) == 6 ? 'on' : ''}>섯</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 7 ? 'on' : ''}>곱</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) >= 10 ? 'on' : ''}>열</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 1 || parseInt(DateFormat(date, 'hh')) == 11 ? 'on' : ''}>한</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 8 ? 'on' : ''}>덟</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 9 ? 'on' : ''}>아</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 9 ? 'on' : ''}>홉</td>\r\n                        <td className={parseInt(DateFormat(date, 'hh')) == 2 || parseInt(DateFormat(date, 'hh')) == 12 ? 'on' : ''}>두</td>\r\n                        <td className={'on'}>시</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={parseInt(DateFormat(date, 'HH')) >= 21 || parseInt(DateFormat(date, 'HH')) < 9 ? 'on' : ''}>밤</td>\r\n                        <td className={parseInt(DateFormat(date, 'HH')) == 12 ? 'on' : ''}>정</td>\r\n                        <td className={parseInt(DateFormat(date, 'mm')) >= 20 && parseInt(DateFormat(date, 'mm')) < 30 ? 'on' : ''}>이</td>\r\n                        <td className={parseInt(DateFormat(date, 'mm')) >= 30 && parseInt(DateFormat(date, 'mm')) < 40 ? 'on' : ''}>삼</td>\r\n                        <td className={parseInt(DateFormat(date, 'mm')) >= 10 && parseInt(DateFormat(date, 'mm')) < 20 ? 'on' : ''}>십</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={parseInt(DateFormat(date, 'mm')) >= 40 && parseInt(DateFormat(date, 'mm')) < 50 ? 'on' : ''}>사</td>\r\n                        <td className={parseInt(DateFormat(date, 'mm')) >= 50 || parseInt(DateFormat(date, 'HH')) == 12 ? 'on' : ''}>오</td>\r\n                        <td className={parseInt(DateFormat(date, 'mm')) >= 10 ? 'on' : ''}>십</td>\r\n                        <td className={parseInt(DateFormat(date, 'mm')) % 10 >= 5 ? 'on' : ''}>오</td>\r\n                        <td className={parseInt(DateFormat(date, 'mm')) > 5 ? 'on' : ''}>분</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst DigitalClock = ({date}: clockProps) => {\r\n    return (\r\n        <div className={'digitalClock'}>\r\n            <p>\r\n                <span>{DateFormat(date, 'a/p hh:mm:ss')}</span>\r\n                <span>{DateFormat(date, 'yyyy-MM-dd ES')}</span>\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AnalogClock = ({date}: clockProps) => {\r\n    const h_s = date.getHours() * 60 * 60;\r\n    const m_s = date.getMinutes() * 60;\r\n    const s = date.getSeconds();\r\n    const hoursDeg = ((h_s + m_s + s) * 0.00833333) % 360;\r\n    const minutesDeg = ((m_s + s) * 0.1) % 360;\r\n    const secondsDeg = s * 6;\r\n\r\n    const hoursStyle = {\r\n        transform: `rotate(${hoursDeg}deg)`\r\n    };\r\n\r\n    const minutesStyle = {\r\n        transform: `rotate(${minutesDeg}deg)`\r\n    };\r\n\r\n    const secondsStyle = {\r\n        transform: `rotate(${secondsDeg}deg)`\r\n    };\r\n\r\n    return (\r\n        <div className={'analogClock'}>\r\n            <div className={'hour'} style={hoursStyle}></div>\r\n            <div className={'minute'} style={minutesStyle}></div>\r\n            <div className={'second'} style={secondsStyle}></div>\r\n            <div className={'pin'}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DigilogClocks = (({date, digilogClockList}: any) => {\r\n    const ns = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\r\n    const h1 = Math.floor(date.getHours() / 10);\r\n    const h2 = date.getHours() % 10;\r\n    const m1 = Math.floor(date.getMinutes() / 10);\r\n    const m2 = date.getMinutes() % 10;\r\n    const s1 = Math.floor(date.getSeconds() / 10);\r\n    const s2 = date.getSeconds() % 10;\r\n\r\n    return (\r\n        <div className={'digilogClocks'}>\r\n            <div className={'digilogClockWrap'}>\r\n                <table>\r\n                    <tbody>\r\n                    {\r\n                        digilogClockList.map((digilogClocks: any, index: number) => (\r\n                            <tr key={index}>\r\n                                {\r\n                                    digilogClocks.map((clock: string, index: number) =>\r\n                                        <td key={index}>\r\n                                            <div className={\r\n                                                'digilogClock ' +\r\n                                                clock.replace(/(h1|h2|m1|m2|s1|s2)/gi, ((__: any) => {\r\n                                                    switch (__) {\r\n                                                        case 'h1':\r\n                                                            return ns[h1];\r\n                                                        case 'h2':\r\n                                                            return ns[h2];\r\n                                                        case 'm1':\r\n                                                            return ns[m1];\r\n                                                        case 'm2':\r\n                                                            return ns[m2];\r\n                                                        case 's1':\r\n                                                            return ns[s1];\r\n                                                        case 's2':\r\n                                                            return ns[s2];\r\n                                                        default:\r\n                                                            return __;\r\n                                                    }\r\n                                                }))\r\n                                            }>\r\n                                                <div className={'h'}></div>\r\n                                                <div className={'m'}></div>\r\n                                            </div>\r\n                                        </td>\r\n                                    )\r\n                                }\r\n                            </tr>))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst Clock = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    const [digilogClockList, setDigilogClockList] = useState(clockList);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(\r\n            () => setDate(new Date()),\r\n            1000\r\n        );\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className={'clock'}>\r\n            <AnalogClock date={date}/>\r\n            <DigitalClock date={date}/>\r\n            <DigilogClocks date={date} digilogClockList={digilogClockList}/>\r\n            <KoreanClock date={date}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;","import React from 'react';\r\nimport './TodoList.scss';\r\nconst TodoList = () => {\r\n\r\n    return(\r\n        <div className={'todoList'}>\r\n            todoList\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './AppMenu.scss';\r\nimport Clock from '../clock/Clock';\r\nimport TodoList from '../todoList/TodoList';\r\n\r\nconst AppIcon = ({title, onClick}:any) => {\r\n\r\n    return(\r\n        <div className={'appIcon'} onClick={onClick}>\r\n            <span className={'appIconName'}>{title}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AppMenu = ({setAppState}: any) => {\r\n    const clockClick = () => {\r\n        setAppState(<Clock />);\r\n    };\r\n\r\n    const todoListClick = () => {\r\n        setAppState(<TodoList />);\r\n    };\r\n\r\n    return(\r\n        <div className={'appMenu'}>\r\n            <AppIcon title={'clock'} onClick={clockClick}/>\r\n            <AppIcon title={'todoList'} onClick={todoListClick}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppMenu;","import React, { useState } from 'react';\r\nimport './App.scss';\r\nimport AppMenu from './component/appMenu/AppMenu';\r\n\r\nfunction App() {\r\n  const [appState, setAppState] = useState(<></>);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {appState}\r\n      <AppMenu setAppState={setAppState}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}